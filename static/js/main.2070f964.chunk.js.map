{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/Navbar.js","views/layout/NavbarView.js","config/MarvelAPI.js","services/CharacterService.js","components/marvel/characters/CharacterDetails.js","store/actions/characterActions.js","views/marvel/characters/CharacterDetailsView.js","components/marvel/characters/CharacterGrid.js","components/dashboard/Dashboard.js","views/dashboard/DashboardView.js","views/marvel/characters/CharacterGridView.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/characterReducer.js","store/reducers/rootReducer.js","index.js"],"names":["SignedInLinks","props","react_default","a","createElement","id","Date","getTime","className","NavLink","to","Navbar","Link","src","process","height","alt","data-target","layout_SignedInLinks","NavbarView","layout_Navbar","MarvelAPI","axios","create","baseURL","defaults","params","apikey","hash","ts","services_CharacterService","CharacterService","Object","classCallCheck","this","FETCH_ALL_CHARACTER","console","log","request","url","concat","limit","offset","method","get","CharacterDetails","possibleConstructorReturn","getPrototypeOf","call","fetchCharacterById","Component","connect","state","character","dispatch","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","getState","result","wrap","_context2","prev","next","sent","type","t0","error","stop","_x3","_x4","apply","arguments","CharacterDetailsView","characters_CharacterDetails","match","CharacterGrid","handlePageChange","event","page","take","skip","_this","fetchCharacters","handleRowClick","selectCharacter","dataItem","main","data","characters","map","item","objectSpread","selected","selectedId","selectedField","gridProps","total","pageable","onPageChange","onRowClick","field","width","title","cell","path","extension","_ref","_callee","_context","_x","_x2","Dashboard","characters_CharacterGrid","DashboardView","dashboard_Dashboard","CharacterGridView","App","BrowserRouter","basename","layout_NavbarView","Switch","Route","exact","component","Boolean","window","location","hostname","initState","authReducer","length","undefined","characterReducer","action","results","rootReducer","combineReducers","auth","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2070f964.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul id={props.id ? props.id : new Date().getTime()} className={props.className}>\r\n            <li>\r\n                <NavLink to=\"/character\">Characters</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\">Comics</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\">Series</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedInLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"red darken-2\">\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to='#' className=\"brand-logo\"><img className=\"responsive-img\" src={process.env.REACT_APP_BASE_NAME + \"/img/logo.png\"} height=\"50\" alt=\"Marvel Manager\"/></Link>\r\n                    <Link to=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></Link>\r\n                    <SignedInLinks className=\"right hide-on-med-and-down\"/>\r\n                </div>\r\n\r\n            </nav>\r\n            <SignedInLinks id=\"mobile-demo\" className=\"sidenav\"/>\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from './../../components/layout/Navbar';\r\nconst NavbarView = () => {\r\n    return (\r\n        <Navbar />\r\n    )\r\n}\r\n\r\nexport default NavbarView","import axios from 'axios';\r\nconst MarvelAPI = axios.create({\r\n    baseURL: process.env.REACT_APP_MARVEL_API_URL,\r\n});\r\nMarvelAPI.defaults.params = {\r\n    apikey: process.env.REACT_APP_MARVEL_API_KEY,\r\n    hash: process.env.REACT_APP_MARVEL_API_HASH,\r\n    ts: \"\"\r\n}\r\n// MarvelAPI.prototype.request = function(config){\r\n//     var defaultConfig = {\r\n//         baseURL: process.env.REACT_APP_MARVEL_API_URL,\r\n//         params: {\r\n//             apikey: process.env.REACT_APP_MARVEL_API_KEY,\r\n//             hash: process.env.REACT_APP_MARVEL_API_HASH,\r\n//             ts: \"\"\r\n//         },\r\n//         data: {}\r\n//     }\r\n//     MarvelAPI.request()\r\n// }\r\n// MarvelAPI.interceptors.request.use(function (c) {\r\n//     // Do something before request is sent\r\n//     let newConfig = Object.assign({}, c);\r\n//     newConfig.url = `${newConfig.url}?ts=&apikey=${}&hash=${process.env.REACT_APP_MARVEL_API_HASH}`\r\n//     return newConfig;\r\n// }, function (error) {\r\n//     // Do something with request error\r\n//     return Promise.reject(error);\r\n// });\r\nexport default MarvelAPI;","import MarvelAPI from '../config/MarvelAPI';\r\nclass CharacterService {\r\n    constructor(){\r\n        this.FETCH_ALL_CHARACTER = \"/v1/public/characters\";\r\n    }\r\n    fetchCharacters(params){\r\n        console.log(params);\r\n        return MarvelAPI.request({\r\n            url: `${this.FETCH_ALL_CHARACTER}?limit=${params.limit}&offset=${params.offset}`,\r\n            method: 'get',\r\n            params: params\r\n        });\r\n    }\r\n    fetchCharacterById(id){\r\n        return MarvelAPI.get(this.FETCH_ALL_CHARACTER+\"/\"+id);\r\n    }\r\n}\r\nexport default new CharacterService();","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCharacterById } from '../../../store/actions/characterActions';\r\nclass CharacterDetails extends Component {\r\n    constructor(props){\r\n        super();\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchCharacterById(this.props.id);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container section character-details\">\r\n                <h5>Character Details</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        character: state.character\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchCharacterById: (id) => dispatch(fetchCharacterById(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterDetails);","import CharacterService from './../../services/CharacterService';\r\nexport const fetchCharacters = (params) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let result = await CharacterService.fetchCharacters(params);\r\n            dispatch({type: 'FETCH_ALL_CHARACTERS', result});\r\n        } catch (error) {\r\n            dispatch({type: 'CALL_ERRORS', error});\r\n        }\r\n    }\r\n}\r\nexport const fetchCharacterById = (params) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let result = await CharacterService.fetchCharacterById(params);\r\n            dispatch({type: 'FETCH_CHARACTER_BY_ID', result});\r\n        } catch (error) {\r\n            dispatch({type: 'CALL_ERRORS', error});\r\n        }\r\n    }\r\n}\r\n\r\nexport const selectCharacter = (selectedId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({type: 'SELECT_CHARACTER', selectedId});\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport CharacterDetails from '../../../components/marvel/characters/CharacterDetails';\r\nclass CharacterDetailsView extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"charactergrid-view container\">\r\n                <CharacterDetails id={this.props.match.params.id} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CharacterDetailsView;\r\n","import React, { Component } from 'react';\r\n// Import the Grid component.\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCharacters, selectCharacter } from '../../../store/actions/characterActions';\r\nimport { Link } from 'react-router-dom';\r\nclass CharacterGrid extends Component {\r\n\r\n    componentDidMount() {\r\n        var params = {\r\n            limit: 5,\r\n            offset: 0,\r\n        }\r\n        this.props.fetchCharacters(params);\r\n    }\r\n    render() {\r\n        const { character } = this.props;\r\n        return (\r\n            <div className=\"section character-list\">\r\n                <h5>All Marvels</h5>\r\n                <Grid\r\n                    data={character.characters.map(\r\n                        (item) => ({ ...item, selected: item.id === character.selectedId }))\r\n                    }\r\n                    selectedField=\"selected\"\r\n                    skip={character.gridProps.offset}\r\n                    take={character.gridProps.limit}\r\n                    total={character.gridProps.total}\r\n                    pageable={true}\r\n                    onPageChange={this.handlePageChange}\r\n                    onRowClick={this.handleRowClick}\r\n                >\r\n                    <GridColumn field=\"name\" width=\"150\" title=\"Name\" />\r\n                    <GridColumn field=\"description\" className='nowrap' title=\"Description\" />\r\n                    <GridColumn field=\"thumbnail\" width=\"160\" title=\" \" cell={(props) => (\r\n                        <td>\r\n                            <Link to={'/character/' + props.dataItem['id']}>\r\n                                <img className=\"img-responsive\" alt=\"\" height='95' src={`${props.dataItem[props.field].path}.${props.dataItem[props.field].extension}`} />\r\n                            </Link>\r\n                        </td>\r\n                    )} />\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n    handlePageChange = (event) => {\r\n        var params = {\r\n            limit: event.page.take,\r\n            offset: event.page.skip,\r\n        }\r\n        this.props.fetchCharacters(params);\r\n    }\r\n    handleRowClick = (event) => {\r\n        this.props.selectCharacter(event.dataItem.id);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        character: state.character\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchCharacters: (params) => dispatch(fetchCharacters(params)),\r\n        selectCharacter: (id) => dispatch(selectCharacter(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterGrid);\r\n","import React, { Component } from 'react';\r\nimport CharacterGrid from '../marvel/characters/CharacterGrid';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CharacterGrid />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport Dashboard from './../../components/dashboard/Dashboard';\r\nclass DashboardView extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard-view container\">\r\n                <Dashboard />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DashboardView;","import React, { Component } from 'react';\r\nimport CharacterGrid from './../../../components/marvel/characters/CharacterGrid';\r\nclass CharacterGridView extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"charactergrid-view container\">\r\n                <CharacterGrid />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CharacterGridView;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport NavbarView from './views/layout/NavbarView';\nimport CharacterDetailsView from './views/marvel/characters/CharacterDetailsView';\nimport DashboardView from './views/dashboard/DashboardView';\nimport CharacterGridView from './views/marvel/characters/CharacterGridView';\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASE_NAME}>\n        <div className=\"App\">\n          <NavbarView />\n          <Switch>\n            <Route exact path=\"/\" component={DashboardView} />\n            <Route exact path={process.env.REACT_APP_BASE_NAME + \"/character\"} component={CharacterGridView} />\n            <Route path={process.env.REACT_APP_BASE_NAME + \"/character/:id\"} component={CharacterDetailsView} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    selectedId: null,\r\n    characters: [],\r\n    gridProps: {\r\n        offset: 0,\r\n        limit: 5,\r\n        total: 0\r\n    }\r\n}\r\n\r\nconst characterReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_ALL_CHARACTERS':\r\n            console.log(action.result.data);\r\n            return {\r\n                ...state,\r\n                characters: action.result.data.data.results,\r\n                gridProps: {\r\n                    offset: action.result.data.data.offset,\r\n                    limit: action.result.data.data.limit,\r\n                    total: action.result.data.data.total\r\n                }\r\n            };\r\n        case 'FETCH_CHARACTER_BY_ID':\r\n            console.log(action.result.data);\r\n            return {\r\n                ...state,\r\n                characters: action.result.data.data.results,\r\n            };\r\n        case 'SELECT_CHARACTER':\r\n            console.log(action.selectedId);\r\n            return { ...state, selectedId: action.selectedId };\r\n        case 'CALL_ERRORS':\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default characterReducer;","import authReducer from './authReducer';\r\nimport characterReducer from './characterReducer';\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    character: characterReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@progress/kendo-theme-material/dist/all.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}