{"version":3,"sources":["components/layout/Navbar.js","views/layout/NavbarView.js","config/MarvelAPI.js","services/CharacterService.js","store/actions/characterActions.js","components/common/LoadingPanel.js","components/marvel/comics/ComicList.js","components/common/ErrorPanel.js","components/marvel/characters/CharacterDetails.js","views/marvel/characters/CharacterDetailsView.js","components/marvel/characters/CharacterGrid.js","components/dashboard/Dashboard.js","views/dashboard/DashboardView.js","views/marvel/characters/CharacterGridView.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/characterReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","Link","to","src","alt","NavbarView","layout_Navbar","MarvelAPI","axios","create","baseURL","process","defaults","params","apikey","hash","ts","services_CharacterService","request","url","concat","limit","offset","method","id","get","FETCH_CHARACTERS","FETCH_COMICS_BY_CHARACTER","unexpected_error","hasError","errorMsg","LoadingPanel","loadingPanel","gridContent","document","querySelector","this","loaded","ReactDOM","createPortal","Component","ComicList","desktopDisplay","comics","length","map","c","key","style","fontSize","title","textAlign","description","width","thumbnail","path","extension","mobileDisplay","marginLeft","ErrorPanel","errorPanel","error","CharacterDetails","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Mousetrap","unbind","fetchCharacterDetails","bind","click","_this$props","console","log","_this$props2","characters","ch","border","borderRadius","padding","name","comics_ComicList","common_ErrorPanel","common_LoadingPanel","connect","state","objectSpread","character","dispatch","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","getState","result","charResult","comicsResult","wrap","_context3","prev","next","type","CharacterService","fetchCharacterById","sent","status","data","results","fetchCommicsByCharacter","t0","stop","_x5","_x6","apply","arguments","CharacterDetailsView","characters_CharacterDetails","match","CharacterGrid","handlePageChanged","event","page","take","skip","_this","fetchCharacters","tr","querySelectorAll","scrollIntoView","handleRowClick","dataItem","index","e","preventDefault","enterCharacter","grid","findIndex","selectCharacter","pressEnter","Redirect","selectedId","main","item","selected","selectedField","total","pageable","onPageChange","onRowClick","onSelectionChange","selectionChange","field","cell","height","_ref","_callee","_context","code","message","_x","_x2","Dashboard","characters_CharacterGrid","DashboardView","dashboard_Dashboard","CharacterGridView","App","HashRouter","layout_NavbarView","Switch","Route","exact","component","Boolean","window","location","hostname","initState","authReducer","undefined","characterReducer","action","rootReducer","combineReducers","auth","store","createStore","applyMiddleware","thunk","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2217883.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div className=\"navbar-fixed\">\r\n            <nav className=\"red darken-2\">\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to='/' className=\"brand-logo center\"><img className=\"responsive-img\" src=\"./img/logo1.png\" alt=\"Marvel Manager\" /></Link>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from './../../components/layout/Navbar';\r\nconst NavbarView = () => {\r\n    return (\r\n        <Navbar />\r\n    )\r\n}\r\n\r\nexport default NavbarView","import axios from 'axios';\r\nconst MarvelAPI = axios.create({\r\n    baseURL: process.env.REACT_APP_MARVEL_API_URL,\r\n});\r\nMarvelAPI.defaults.params = {\r\n    apikey: process.env.REACT_APP_MARVEL_API_KEY,\r\n    hash: process.env.REACT_APP_MARVEL_API_HASH,\r\n    ts: \"\"\r\n}\r\n\r\nexport default MarvelAPI;","import MarvelAPI from '../config/MarvelAPI';\r\nclass CharacterService {\r\n    fetchCharacters(params){\r\n        const FETCH_CHARACTERS = \"/v1/public/characters\";\r\n        return MarvelAPI.request({\r\n            url: `${FETCH_CHARACTERS}?limit=${params.limit}&offset=${params.offset}`,\r\n            method: 'get',\r\n            params: params\r\n        });\r\n    }\r\n    fetchCharacterById(id){\r\n        const FETCH_CHARACTERS = \"/v1/public/characters\";\r\n        return MarvelAPI.get(FETCH_CHARACTERS+\"/\"+id);\r\n    }\r\n    fetchCommicsByCharacter(id){\r\n        const FETCH_COMICS_BY_CHARACTER = `/v1/public/characters/${id}/comics`\r\n        return MarvelAPI.get(FETCH_COMICS_BY_CHARACTER);\r\n    }\r\n}\r\nexport default new CharacterService();","import CharacterService from './../../services/CharacterService';\r\nvar unexpected_error = {hasError: true, errorMsg: \"Opps, Something went wrong!\"};\r\nexport const fetchCharacters = (params) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let result = null;\r\n            dispatch({ type: 'FETCH_CHARACTERS', result });\r\n            result = await CharacterService.fetchCharacters(params);\r\n            if (result.code !== 200) {\r\n                console.log(result);\r\n                dispatch({ type: 'FETCH_CHARACTERS_FAILURE', error: {hasError: true, errorMsg: result.message} });\r\n            }\r\n            dispatch({ type: 'FETCH_CHARACTERS_SUCCESS', result });\r\n        } catch (error) {\r\n\r\n            dispatch({ type: 'FETCH_CHARACTERS_FAILURE', error: unexpected_error });\r\n        }\r\n    }\r\n}\r\nexport const fetchCharacterById = (id) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let result = null;\r\n            dispatch({ type: 'FETCH_CHARACTERS', result });\r\n            result = await CharacterService.fetchCharacterById(id);\r\n            dispatch({ type: 'FETCH_CHARACTERS_SUCCESS', result });\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_CHARACTERS_FAILURE', error: unexpected_error });\r\n        }\r\n    }\r\n}\r\nexport const fetchCharacterDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let result = {characters: [], comics:[]};\r\n            dispatch({ type: 'FETCH_CHARACTERS_DETAILS', result });\r\n            let charResult = await CharacterService.fetchCharacterById(id);\r\n            console.log(charResult)\r\n            if (charResult.status === 200) {\r\n                result.characters = charResult.data.data.results;\r\n            }\r\n            let comicsResult = await CharacterService.fetchCommicsByCharacter(id);\r\n            if (comicsResult.status === 200) {\r\n                result.comics = comicsResult.data.data.results;\r\n            }\r\n            \r\n            dispatch({ type: 'FETCH_CHARACTERS_DETAILS_SUCCESS', result });\r\n        } catch (error) {\r\n            console.error(error);\r\n            dispatch({ type: 'FETCH_CHARACTERS_DETAILS_FAILURE', error: unexpected_error });\r\n        }\r\n    }\r\n}\r\n\r\nexport const selectCharacter = (selectedId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'SELECT_CHARACTER', selectedId });\r\n    }\r\n}\r\n\r\nexport const enterCharacter = (selectedId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'SELECT_CHARACTER_ENTER', selectedId });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nclass LoadingPanel extends Component {\r\n    render() {\r\n        const loadingPanel = (\r\n            <div className=\"k-loading-mask\">\r\n                <span className=\"k-loading-text\">Loading</span>\r\n                <div className=\"k-loading-image\"></div>\r\n                <div className=\"k-loading-color\"></div>\r\n            </div>\r\n        );\r\n\r\n        const gridContent = document && document.querySelector('.k-grid-content');\r\n        if (this.props.loaded && this.props.loaded === true) {\r\n            return \"\"\r\n        }else{\r\n            return gridContent ? ReactDOM.createPortal(loadingPanel, gridContent) : loadingPanel;\r\n        }\r\n    }\r\n}\r\nexport default LoadingPanel","import React from 'react';\r\nconst ComicList = (props) => {\r\n    const desktopDisplay = props.comics && props.comics.length > 0 ? props.comics.map(c => {\r\n        return (\r\n            <li className=\"collection-item show-on-medium-and-up hide-on-small-only\" key={c.id}>\r\n                <div className=\"row\">\r\n                    <div className=\"col s9\">\r\n                        <div style={{ fontSize: '13pt' }}><b>{c.title}</b></div>\r\n                        <p style={{ textAlign: 'justify' }}>{c.description ? c.description : \"Updating...\"}</p>\r\n                    </div>\r\n                    <div className=\"col s3\">\r\n                        <img width=\"80%\" src={`${c.thumbnail.path}.${c.thumbnail.extension}`} alt={c.title} className=\"responsive-img center\" />\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }) : \"\";\r\n\r\n    const mobileDisplay = props.comics && props.comics.length > 0 ? props.comics.map(c => {\r\n        return (\r\n            <li className=\"collection-item show-on-small hide-on-med-and-up\" key={c.id}>\r\n                <div className=\"container\">\r\n                    <div className=\"center-align\"><img width=\"70%\" src={`${c.thumbnail.path}.${c.thumbnail.extension}`} alt={c.title} className=\"responsive-img\" /></div>\r\n                    <div className=\"center-align\" style={{ fontSize: '13pt' }}><b>{c.title}</b></div>\r\n                    <p style={{ textAlign: 'justify' }}>{c.description ? c.description : \"Updating...\"}</p>\r\n                </div>\r\n            </li>\r\n        )\r\n    }) : \"\";\r\n\r\n    const show = props.comics && props.comics.length > 0 ? (\r\n        <div>\r\n            <ul className=\"collection\">\r\n                <li className=\"collection-header\" style={{ marginLeft: '10px' }}><h4>Comic(s)</h4></li>\r\n                {desktopDisplay}\r\n                {mobileDisplay}\r\n            </ul>\r\n        </div>\r\n    ) : (\r\n            <div>\r\n                <ul className=\"collection\">\r\n                    <li className=\"collection-header\" style={{ marginLeft: '10px' }}><h4>No Comic(s)</h4></li>\r\n                    {desktopDisplay}\r\n                    {mobileDisplay}\r\n                </ul>\r\n            </div>\r\n        )\r\n    return show;\r\n}\r\nexport default ComicList","import React, { Component } from 'react';\r\nclass ErrorPanel extends Component {\r\n    render() {\r\n        const errorPanel = (\r\n            <div className=\"row\">\r\n                <div className=\"col s12\">\r\n                    <div className=\"card-panel red accent-1\">{this.props.error ? this.props.error.errorMsg : \"\"}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        if (this.props.error && this.props.error.hasError === true) {\r\n            return errorPanel;\r\n        }else{\r\n            return \"\";\r\n        }\r\n    }\r\n}\r\nexport default ErrorPanel","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCharacterDetails } from '../../../store/actions/characterActions';\r\nimport LoadingPanel from '../../common/LoadingPanel';\r\nimport ComicList from '../comics/ComicList';\r\nimport ErrorPanel from '../../common/ErrorPanel';\r\nimport Mousetrap from 'mousetrap';\r\nimport { Link } from 'react-router-dom';\r\nclass CharacterDetails extends Component {\r\n    constructor(props) {\r\n        super();\r\n    }\r\n    componentWillMount() {\r\n        Mousetrap.unbind('esc');\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchCharacterDetails(this.props.id);\r\n        Mousetrap.bind('esc', function () {\r\n            document.querySelector('.back-link').click();\r\n        });\r\n    }\r\n    render() {\r\n        const { loaded, error } = this.props;\r\n        console.log(this.props);\r\n\r\n        const { characters, comics } = this.props;\r\n        const ch = characters && characters.length > 0 ? characters[0] : null;\r\n        if (ch && loaded === true) {\r\n            return (\r\n                <div className=\"container section character-details desktop-device\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m4\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-image\" style={{\r\n                                    border: '1px solid #ddd',\r\n                                    borderRadius: '4px',\r\n                                    padding: '5px',\r\n                                }}>\r\n                                    <img alt={ch.name} className=\"img-responsive\" src={ch.thumbnail.path + \".\" + ch.thumbnail.extension} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col s12 m8\">\r\n                            <h4>{ch.name}</h4>\r\n                            <p>{ch.description ? ch.description : \"Updating...\"}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <ComicList comics={comics} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"center-align\"><Link className='back-link' to='/'>Go Back</Link></div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <ErrorPanel error={error} />\r\n                <LoadingPanel loaded={loaded} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.character\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchCharacterDetails: (id) => dispatch(fetchCharacterDetails(id)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterDetails);","import React, { Component } from 'react';\r\nimport CharacterDetails from '../../../components/marvel/characters/CharacterDetails';\r\nclass CharacterDetailsView extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CharacterDetails id={this.props.match.params.id} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CharacterDetailsView;\r\n","import React, { Component } from 'react';\r\n// Import the Grid component.\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCharacters, selectCharacter, enterCharacter } from '../../../store/actions/characterActions';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport LoadingPanel from '../../common/LoadingPanel';\r\nimport ErrorPanel from '../../common/ErrorPanel';\r\nimport Mousetrap from 'mousetrap';\r\nclass CharacterGrid extends Component {\r\n    componentWillMount() {\r\n        Mousetrap.unbind('tab');\r\n        Mousetrap.unbind('shift+tab');\r\n        Mousetrap.unbind('enter');\r\n    }\r\n    componentDidMount() {\r\n        var props = this.props;\r\n        var params = {\r\n            limit: 20,\r\n            offset: 0,\r\n        }\r\n        props.fetchCharacters(params);\r\n    }\r\n    render() {\r\n        const { grid, error, pressEnter } = this.props;\r\n        if (pressEnter === true) {\r\n            return <Redirect to={'/character/' + grid.selectedId} />\r\n        }\r\n        return (\r\n            <div className=\"section character-list\">\r\n                <ErrorPanel error={error} />\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <h5>All Marvels</h5>\r\n                        <Grid\r\n                            data={grid.data ? grid.data.map(\r\n                                (item) => ({ ...item, selected: item.id === grid.selectedId }))\r\n                                : []}\r\n                            selectedField=\"selected\"\r\n                            skip={grid.offset}\r\n                            take={grid.limit}\r\n                            total={grid.total}\r\n                            pageable={true}\r\n                            onPageChange={this.handlePageChanged}\r\n                            onRowClick={this.handleRowClick}\r\n                            onSelectionChange={this.selectionChange}\r\n                        >\r\n                            <GridColumn field=\"name\" width=\"150\" title=\"Name\" />\r\n                            <GridColumn field=\"description\" className='nowrap' title=\"Description\" />\r\n                            <GridColumn field=\"thumbnail\" width=\"200\" title=\" \" cell={(props) => (\r\n                                <td>\r\n                                    <Link to={'/character/' + props.dataItem['id']}>\r\n                                        <img className=\"img-responsive\" alt=\"\" height='150' src={`${props.dataItem[props.field].path}.${props.dataItem[props.field].extension}`} />\r\n                                    </Link>\r\n                                </td>\r\n                            )} />\r\n                        </Grid>\r\n                        <LoadingPanel loaded={grid.loaded} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    handlePageChanged = (event) => {\r\n        var params = {\r\n            limit: event.page.take,\r\n            offset: event.page.skip,\r\n        }\r\n        this.props.fetchCharacters(params);\r\n        var tr = document.querySelectorAll(\".k-master-row\");\r\n        tr[0].querySelectorAll('td')[0].click();\r\n        tr[0].querySelectorAll('td')[0].scrollIntoView();\r\n        Mousetrap.unbind('tab');\r\n        Mousetrap.unbind('shift+tab');\r\n        Mousetrap.unbind('enter');\r\n    }\r\n    handleRowClick = (event) => {\r\n        var id = event.dataItem.id;\r\n        \r\n        var props = this.props;\r\n        var index = 0;\r\n        Mousetrap.unbind('tab');\r\n        Mousetrap.unbind('shift+tab');\r\n        Mousetrap.unbind('enter');\r\n        Mousetrap.bind('enter', function (e) {\r\n            e.preventDefault();\r\n            props.enterCharacter(id);\r\n        });\r\n        Mousetrap.bind('tab', function (e) {\r\n            e.preventDefault();\r\n            index = props.grid.data.findIndex(dataItem => dataItem.id === id);\r\n            index++;\r\n            if (index === props.grid.data.length) {\r\n                index = 0;\r\n            }\r\n            var tr = document.querySelectorAll(\".k-master-row\");\r\n            tr[index].querySelectorAll('td')[0].click();\r\n            tr[index].querySelectorAll('td')[0].scrollIntoView();\r\n\r\n        });\r\n        Mousetrap.bind('shift+tab', function (e) {\r\n            e.preventDefault();\r\n            index = props.grid.data.findIndex(dataItem => dataItem.id === id);\r\n            index--;\r\n            if (index < 0) {\r\n                index = 0;\r\n            }\r\n            var tr = document.querySelectorAll(\".k-master-row\");\r\n            tr[index].querySelectorAll('td')[0].click();\r\n            tr[index].querySelectorAll('td')[0].scrollIntoView();\r\n        });\r\n        this.props.selectCharacter(id);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        grid: {\r\n            loaded: state.character.loaded,\r\n            selectedId: state.character.selectedId,\r\n            offset: state.character.offset,\r\n            limit: state.character.limit,\r\n            total: state.character.total,\r\n            data: state.character.results\r\n        },\r\n        error: state.character.error,\r\n        pressEnter: state.character.pressEnter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchCharacters: (params) => dispatch(fetchCharacters(params)),\r\n        enterCharacter: (id) => dispatch(enterCharacter(id)),\r\n        selectCharacter: (id) => dispatch(selectCharacter(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterGrid);\r\n","import React, { Component } from 'react';\r\nimport CharacterGrid from '../marvel/characters/CharacterGrid';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CharacterGrid />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport Dashboard from './../../components/dashboard/Dashboard';\r\nclass DashboardView extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard-view\">\r\n                <Dashboard />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DashboardView;","import React, { Component } from 'react';\r\nimport CharacterGrid from './../../../components/marvel/characters/CharacterGrid';\r\nclass CharacterGridView extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"charactergrid-view\">\r\n                <CharacterGrid />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CharacterGridView;\r\n","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport NavbarView from './views/layout/NavbarView';\nimport CharacterDetailsView from './views/marvel/characters/CharacterDetailsView';\nimport DashboardView from './views/dashboard/DashboardView';\nimport CharacterGridView from './views/marvel/characters/CharacterGridView';\nclass App extends Component {\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <NavbarView />\n          <Switch>\n            <Route exact path=\"/\" component={DashboardView} />\n            <Route exact path=\"/character\" component={CharacterGridView} />\n            <Route path=\"/character/:id\" component={CharacterDetailsView} />\n          </Switch>\n        </div>\n      </HashRouter>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n}\r\n\r\nconst characterReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_CHARACTERS':\r\n            return {\r\n                ...state,\r\n                loaded: false,\r\n                error: null\r\n                \r\n            };\r\n        case 'FETCH_CHARACTERS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.result.data.data,\r\n                selectedId: null,\r\n                loaded: true,\r\n                error: null\r\n                \r\n            };\r\n        case 'FETCH_CHARACTERS_FAILURE':\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                error: action.error\r\n            };\r\n\r\n        case 'FETCH_CHARACTERS_DETAILS':\r\n            return {\r\n                ...state,\r\n                loaded: false,\r\n                error: null,\r\n                pressEnter: false\r\n            };\r\n        case 'FETCH_CHARACTERS_DETAILS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.result,\r\n                loaded: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_CHARACTERS_DETAILS_FAILURE':\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                error: action.error\r\n            };\r\n        case 'SELECT_CHARACTER':\r\n            return { ...state, selectedId: action.selectedId, error: null };\r\n        case 'SELECT_CHARACTER_ENTER':\r\n            return { ...state, selectedId: action.selectedId, pressEnter: true, error: null };\r\n        case 'CALL_ERRORS':\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default characterReducer;","import authReducer from './authReducer';\r\nimport characterReducer from './characterReducer';\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    character: characterReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}